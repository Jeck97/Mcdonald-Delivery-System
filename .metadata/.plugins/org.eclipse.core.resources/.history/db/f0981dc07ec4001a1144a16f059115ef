package mcdelivery.controller.handler;

import javax.ws.rs.client.Client;
import javax.ws.rs.client.ClientBuilder;
import javax.ws.rs.client.Entity;
import javax.ws.rs.client.WebTarget;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;

import mcdelivery.model.Account;

public class BankServiceHandler {
	
	private static final String url = "http://localhost:8080/BankServiceProvider/service/bank";
	
	private Client client;
	private WebTarget webTarget;
	
	public BankServiceHandler() {
		
		// Create JAX-RS client
		client = ClientBuilder.newClient();
		
		// Get WebTarget for URL
		webTarget = client.target(url);
		
	}
	
	
	/**
	 * This method process the transaction using the account given from client
	 * 
	 * It will validate the existence of account, authentication of account 
	 * and sufficiency of account balance to process the transaction orderly
	 * 
	 * @param amount
	 * @param account
	 * 
	 * @return the error message if requirement not match, otherwise 
	 * return the account with all information except the password
	 * @throws JsonProcessingException 
	 */
	public Response transaction(double amount, Account account) throws JsonProcessingException {
		
		// Add path
		webTarget = webTarget.path("transaction?amount=" + amount);
		
		// Declare and initialize account
		Account account = new Account();
		account.setAccountNumber(accountNumber);
		account.setPassword(password);
		
		// Parse account to JSON format
		ObjectMapper mapper = new ObjectMapper();
		String jsonAccount = mapper.writeValueAsString(account);
		
		// Execute HTTP POST method
		Entity<String> entityAccount = Entity.entity(jsonAccount, MediaType.APPLICATION_JSON);
		Response response = webTarget.request(MediaType.APPLICATION_JSON).post(entityAccount);
		
		return response;
		
	}

}
